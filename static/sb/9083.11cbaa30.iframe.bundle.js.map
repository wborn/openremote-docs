{"version":3,"file":"9083.11cbaa30.iframe.bundle.js","mappings":";;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA","sources":["webpack://@openremote/workshop/../../component/or-icon/lib/index.js"],"sourcesContent":["var __decorate=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,s=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(s=(i<3?r(s):i>3?r(e,o,s):r(e,o))||s);return i>3&&s&&Object.defineProperty(e,o,s),s};import{css,html,LitElement,unsafeCSS}from\"lit\";import{unsafeSVG}from\"lit/directives/unsafe-svg.js\";import{customElement,property,state}from\"lit/decorators.js\";import{AssetModelUtil}from\"@openremote/model\";import OrIconSet from\"./or-icon-set\";export{OrIconSet};const mdiFontStyle=require(\"@mdi/font/css/materialdesignicons.min.css\");export class IconSetAddedEvent extends CustomEvent{constructor(){super(IconSetAddedEvent.NAME,{bubbles:!0,composed:!0})}}IconSetAddedEvent.NAME=\"or-iconset-added\";export function createSvgIconSet(t,e){return{getIconTemplate:o=>{const n=e[o];return n?html`\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\n                         viewBox=\"0 0 ${t} ${t}\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\n                        ${unsafeSVG(n.startsWith(\"<\")?n:'<path xmlns=\"http://www.w3.org/2000/svg\" d=\"'+n+'\" />')}\n                    </svg>\n                `:html``},onAdd:void 0}}export function createMdiIconSet(t){return{getIconTemplate:t=>html`<span style=\"font-family: 'Material Design Icons';\" class=\"mdi-${t}\"></span>`,onAdd(){const e=document.createElement(\"style\");e.id=\"mdiFontStyle\",e.textContent='@font-face {\\n  font-family: \"Material Design Icons\";\\n  src: url(\"'+t+'/shared/fonts/Material Design Icons/fonts/materialdesignicons-webfont.eot\");\\n  src: url(\"'+t+'/shared/fonts/Material Design Icons/fonts/materialdesignicons-webfont.eot\") format(\"embedded-opentype\"), url(\"'+t+'/shared/fonts/Material Design Icons/fonts/materialdesignicons-webfont.woff2\") format(\"woff2\"), url(\"'+t+'/shared/fonts/Material Design Icons/fonts/materialdesignicons-webfont.woff\") format(\"woff\"), url(\"'+t+'/shared/fonts/Material Design Icons//fonts/materialdesignicons-webfont.ttf\") format(\"truetype\");\\n  font-weight: normal;\\n  font-style: normal;\\n}',document.head.appendChild(e)}}}class ORIconSets{constructor(){this._icons={}}addIconSet(t,e){this._icons[t]=e,this._defaultIconSet||(this._defaultIconSet=e),e.onAdd&&e.onAdd(),window.dispatchEvent(new IconSetAddedEvent)}getIconSet(t){return this._icons[t]}getIconTemplate(t){if(!t)return html``;const e=(t||\"\").split(\":\"),o=e.pop(),n=e.pop();let r=this._defaultIconSet;return n&&(r=this.getIconSet(n)),o&&r?r.getIconTemplate(o):html``}}export const IconSets=new ORIconSets;export function getAssetDescriptorIconTemplate(t,e,o,n,r){const i=n||AssetModelUtil.getAssetDescriptorColour(t,e);let s=r||AssetModelUtil.getAssetDescriptorIcon(t,o);return s||(s=AssetModelUtil.getAssetDescriptorIcon(\"ThingAsset\")),html`<or-icon style=\"--or-icon-fill: ${i?\"#\"+i:\"unset\"}\" icon=\"${s}\"></or-icon>`}let OrIcon=class extends LitElement{constructor(){super(...arguments),this._handler=t=>{this._updateIcon()}}static get styles(){return[css`\n                :host {    \n                    --internal-or-icon-width: var(--or-icon-width, 24px);\n                    --internal-or-icon-height: var(--or-icon-height, 24px);\n                    --internal-or-icon-fill: var(--or-icon-fill, currentColor);\n                    --internal-or-icon-stroke: var(--or-icon-fill, none);\n                    --internal-or-icon-stroke-width: var(--or-icon-stroke-width, 0);\n                \n                    display: inline-block;\n                    color: var(--internal-or-icon-fill);\n                    fill: var(--internal-or-icon-fill);\n                    stroke: var(--internal-or-icon-stroke);\n                    stroke-width: var(--internal-or-icon-stroke-width);\n                    vertical-align: text-bottom;\n                    font-weight: normal;\n                    font-style: normal;\n                    font-size: var(--internal-or-icon-width);\n                    line-height: 1;\n                    letter-spacing: normal;\n                    text-transform: none;\n                    white-space: nowrap;\n                    word-wrap: normal;\n                    direction: ltr;\n                    /* Support for all WebKit browsers. */\n                    -webkit-font-smoothing: antialiased;\n                    /* Support for Safari and Chrome. */\n                    text-rendering: optimizeLegibility;\n                    /* Support for Firefox. */\n                    -moz-osx-font-smoothing: grayscale;\n                    /* Support for IE. */\n                    font-feature-settings: 'liga';\n                }\n                \n                :host([hidden]) {\n                    display: none;\n                }\n                \n                svg {\n                    pointer-events: none;\n                    display: block;\n                    width: var(--internal-or-icon-width);\n                    height: var(--internal-or-icon-height);\n                }\n            `,css`${unsafeCSS(mdiFontStyle)}`]}render(){return this._iconTemplate||html``}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener(IconSetAddedEvent.NAME,this._handler)}shouldUpdate(t){return t.has(\"icon\")&&this._updateIcon(),!0}_updateIcon(){this._iconTemplate=void 0,window.removeEventListener(IconSetAddedEvent.NAME,this._handler),this._iconTemplate=IconSets.getIconTemplate(this.icon),this.icon&&!this._iconTemplate&&window.addEventListener(IconSetAddedEvent.NAME,this._handler)}};__decorate([property({type:String,reflect:!0})],OrIcon.prototype,\"icon\",void 0),__decorate([state()],OrIcon.prototype,\"_iconTemplate\",void 0),OrIcon=__decorate([customElement(\"or-icon\")],OrIcon);export{OrIcon};"],"names":[],"sourceRoot":""}